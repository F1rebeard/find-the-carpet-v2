"""Initial tables

Revision ID: 001
Revises:
Create Date: 2025-07-27 14:20:51.643179

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "001"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "banned_users",
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("last_name", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=64), nullable=True),
        sa.Column("phone", sa.String(length=16), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("telegram_id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "carpets",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("carper_id", sa.BigInteger(), nullable=False),
        sa.Column("collection", sa.String(length=64), nullable=False),
        sa.Column("geometry", sa.String(length=32), nullable=False),
        sa.Column("size", sa.String(length=32), nullable=False),
        sa.Column("design", sa.String(length=64), nullable=False),
        sa.Column("color_1", sa.String(length=32), nullable=False),
        sa.Column("color_2", sa.String(length=32), nullable=False),
        sa.Column("color_3", sa.String(length=32), nullable=False),
        sa.Column("style", sa.String(length=32), nullable=False),
        sa.Column("quality", sa.Integer(), nullable=False),
        sa.Column("price", sa.Double(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("carper_id"),
    )
    op.create_table(
        "pending_users",
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("last_name", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=64), nullable=True),
        sa.Column("phone", sa.String(length=16), nullable=True),
        sa.Column("from_whom", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("telegram_id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "registered_users",
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("last_name", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=64), nullable=True),
        sa.Column("phone", sa.String(length=16), nullable=True),
        sa.Column("role", sa.String(length=32), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("telegram_id"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "favorite_carpets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("carpet_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["carpet_id"], ["carpets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["registered_users.telegram_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "carpet_id", name="uq_user_carpet"),
    )
    op.create_table(
        "sales",
        sa.Column("sale_id", sa.UUID(), nullable=False),
        sa.Column(
            "sale_date", sa.Date(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("payment_method", sa.String(length=32), nullable=False),
        sa.Column("basic_price", sa.Double(), nullable=False),
        sa.Column("sale_price", sa.Double(), nullable=False),
        sa.Column("discount", sa.Double(), nullable=False),
        sa.Column("sold_to", sa.String(length=32), nullable=False),
        sa.Column("carpet_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["carpet_id"],
            ["carpets.id"],
        ),
        sa.PrimaryKeyConstraint("sale_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sales")
    op.drop_table("favorite_carpets")
    op.drop_table("registered_users")
    op.drop_table("pending_users")
    op.drop_table("carpets")
    op.drop_table("banned_users")
    # ### end Alembic commands ###
