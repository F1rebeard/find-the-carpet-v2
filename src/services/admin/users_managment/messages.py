import dataclasses

from src.schemas.users import UserRegistrationInput


@dataclasses.dataclass
class UsersManagementMessages:
    """Centralized messages for user management."""

    not_in_pending_list: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞—é—â–∏—Ö"
    user_not_found: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    already_pending: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞—é—â–∏—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –æ–¥–æ–±—Ä–µ–Ω–∏—è"
    already_registered: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
    already_banned: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –°–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ–≥–æ."
    error_in_approval_process: str = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    error_in_reject_process: str = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    error_in_banning_process: str = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    user_added_manually: str = (
        "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞c!\n\n"
        "–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
    )
    user_approve: str = (
        "‚úÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∞!</b>\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
    )

    @staticmethod
    def user_rejected(reason: str | None = None) -> str:
        message = (
            "‚ùå <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>\n\n"
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n"
        )
        if reason:
            message += f"–ü—Ä–∏—á–∏–Ω–∞: {reason}\n\n"
        return message

    @staticmethod
    def user_banned(reason: str | None = None) -> str:
        message = "üö´ <b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>\n\n" "–í–∞—à –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –±—ã–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.\n\n"
        if reason:
            message += f"–ü—Ä–∏—á–∏–Ω–∞: {reason}\n\n"
        return message

    @staticmethod
    def admin_reject_message(reason: str | None = None) -> str:
        message = f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, –ø—Ä–∏—á–∏–Ω–∞: {reason}" if reason else "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
        return message

    @staticmethod
    def admin_approve_message(role: str) -> str:
        return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–¥–æ–±—Ä–µ–Ω —Å —Ä–æ–ª—å—é: {role}"

    @staticmethod
    def admin_ban_message(reason: str | None = None) -> str:
        message = (
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –ø—Ä–∏—á–∏–Ω–∞: {reason}"
            if reason
            else ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        )
        return message

    @staticmethod
    def notify_admin_about_registration(user_data: UserRegistrationInput) -> str:
        message = (
            "üÜï <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</b>\n\n"
            f"üë§ <b>–ò–º—è:</b> {user_data.first_name} {user_data.last_name or ''}\n"
            f"üÜî <b>Telegram ID:</b> <code>{user_data.telegram_id}</code>\n"
            f"üë§ <b>Username:</b> @{user_data.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìß <b>Email:</b> {user_data.email or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user_data.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üí° <b>–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª:</b> {user_data.from_whom}\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏."
        )
        return message


messages = UsersManagementMessages()
